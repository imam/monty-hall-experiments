<!DOCTYPE html>
<html>
<head>
	<title>
		Monty Hall Experiment
	</title>
	<link rel="stylesheet" href="css/normalize.css">
	<link rel="stylesheet" href="css/skeleton.css">
	<link rel="stylesheet" href="css/mudah.css">
	<script src="https://unpkg.com/vue/dist/vue.js"></script>	
	<script src="https://cdnjs.cloudflare.com/ajax/libs/fetch/2.0.1/fetch.min.js"></script>
</head>
<body>
<a href="https://github.com/imamassi/monty-hall-experiments" class="github-corner" aria-label="View source on Github"><svg width="80" height="80" viewBox="0 0 250 250" style="fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path><path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"></path><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style>	
<div class="container">
	<h1 class="text-center margin-top">Monty Hall</h1>
	<p class="text-center text-bold padding-bottom">Monty hall is a popular math problem that has been around for several years. This Ruby program will let you to run several Monty Hall experiments at one click. Just like the real game, the computer won't know anyhing about the winning door and I try to make the program as fair as possible so you won't feel cheated.</p>
	<p>View this site repository on https://github.com/imamassi/monty-hall-experiments </p>
	<form>
		<div class="row">
			<div class="six columns">
				<label for="changedoor">Change Door</label>
				<input type="text" class="u-full-width" id="change_door_repetition">
			</div>
			<div class="six columns">
				<label for="changedoor">Don't Change Door</label>
				<input type="text" class="u-full-width" id="dont_change_door_repetition">
			</div>
		</div>
		<button type="submit" id="start" class="block-center button-primary">Start New Game</button>
		<button type="submit" id="reset" class="block-center">Reset</button>
	</form>

	<div id="gameTable">
		<div v-if="tableShow" class="hidden" id="gameTableCalculations">
			<ul>
				<li>Winning Total: {{winningTotal}}</li>
				<li>Winning Percentage: {{winningPercentage}}%</li>
			</ul>
		</div>

		<table v-if="tableShow" class="hidden u-full-width" id="gameTableGames">
			<thead>
				<tr>
					<th>Winning Door</th>
					<th>First Door</th>
					<th>Change Door?</th>
					<th>Is Winning?</th>
				</tr>
			</thead>
			<tbody >
				<tr v-for="game in games">
					<th>{{ game.winningDoor }}</th>
					<th>{{ game.firstDoor }}</th>
					<th>{{ game.willChangeDoor }}</th>
					<th>{{ game.isWinning }}</th>
				</tr>
			</tbody>
		</table>
	</div>

	<script>

	document.getElementById('gameTableGames').classList.remove('hidden');

	document.getElementById('gameTableCalculations').classList.remove('hidden')


	document.getElementById('start').addEventListener('click', function(e){
		e.preventDefault();
		change_door_repetition = document.getElementById('change_door_repetition').value;
		dont_change_door_repetition = document.getElementById('dont_change_door_repetition').value;
		request = fetch('/game?change_door_repetition='+change_door_repetition+'&dont_change_door_repetition='+dont_change_door_repetition,{
			method: 'GET',
		}).then(function(response){
			return response.text();
		});
		request.then(function(e){
			e = JSON.parse(e);
			data.games = e.games;
			data.winningTotal = e.winningTotal;
			data.winningPercentage = Math.round(Number(e.winningPercentage)*100)/100;
			console.log(e.games);
		});
	})

	document.getElementById('reset').addEventListener('click', function(e){
		data.games = [];
		e.preventDefault();
	})

	var data = new Vue({
		el: "#gameTable",
		data: {
			games: [
			],
			tableShow: false,
			winningTotal: 0,
			winningPercentage: 0
		},
		computed: {
			tableShow: function(){
				if(this.games.length > 0){
					return tableShow = true;
				} else {
					return tableShow = false;
				}
			}
		}
	})


	</script>
</div>
</body>
</html>